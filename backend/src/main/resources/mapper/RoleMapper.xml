<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.esfile.mapper.RoleMapper">

    <!-- 结果映射 -->
    <resultMap id="RoleResultMap" type="com.esfile.entity.mybatis.Role">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_code" property="roleCode" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="is_system" property="isSystem" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, role_name, role_code, description, status, sort, is_system, 
        create_time, update_time, create_by, update_by
    </sql>

    <!-- 查询所有角色 -->
    <select id="selectAll" resultMap="RoleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM role
        ORDER BY sort ASC, create_time DESC
    </select>

    <!-- 根据ID查询角色 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="RoleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM role
        WHERE id = #{id}
    </select>

    <!-- 根据角色编码查询角色 -->
    <select id="selectByRoleCode" parameterType="java.lang.String" resultMap="RoleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM role
        WHERE role_code = #{roleCode}
    </select>

    <!-- 插入角色 -->
    <insert id="insert" parameterType="com.esfile.entity.mybatis.Role" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO role (
            role_name, role_code, description, status, sort, is_system, 
            create_time, update_time, create_by, update_by
        ) VALUES (
            #{roleName}, #{roleCode}, #{description}, #{status}, #{sort}, #{isSystem}, 
            #{createTime}, #{updateTime}, #{createBy}, #{updateBy}
        )
    </insert>

    <!-- 更新角色 -->
    <update id="updateById" parameterType="com.esfile.entity.mybatis.Role">
        UPDATE role
        <set>
            <if test="roleName != null">role_name = #{roleName},</if>
            <if test="roleCode != null">role_code = #{roleCode},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="isSystem != null">is_system = #{isSystem},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除角色 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM role WHERE id = #{id}
    </delete>

    <!-- 批量删除角色 -->
    <delete id="batchDeleteByIds">
        DELETE FROM role WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 插入角色权限关联 -->
    <insert id="insertRolePermission" parameterType="com.esfile.entity.mybatis.RolePermission">
        INSERT INTO role_permission (role_id, permission_id, create_time, update_time)
        VALUES (#{roleId}, #{permissionId}, #{createTime}, #{updateTime})
    </insert>

    <!-- 删除角色权限关联 -->
    <delete id="deleteRolePermissions" parameterType="java.lang.Long">
        DELETE FROM role_permission WHERE role_id = #{roleId}
    </delete>

    <!-- 删除用户角色关联 -->
    <delete id="deleteUserRoles" parameterType="java.lang.Long">
        DELETE FROM user_role WHERE role_id = #{roleId}
    </delete>

    <!-- 查询角色权限ID列表 -->
    <select id="selectRolePermissionIds" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT permission_id
        FROM role_permission
        WHERE role_id = #{roleId}
    </select>

    <!-- 查询角色用户列表 -->
    <select id="selectRoleUsers" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT 
            u.id,
            u.username,
            u.real_name as realName,
            u.email,
            u.status,
            u.create_time as createTime
        FROM user_role ur
        JOIN user u ON ur.user_id = u.id
        WHERE ur.role_id = #{roleId}
    </select>

</mapper>
